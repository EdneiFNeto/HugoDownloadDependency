<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cancelamento - Plugin SmartPOS</title>
    <link>//localhost:1313/functions/cancel_payment.html</link>
    <description>Cancelamento Faz-se uso da classe SmartPOSVoidRequestBuilder. Exemplo de Cancelamento val voidRequest = SmartPOSPlugin.createVoidRequestBuilder() .callback(object: Callback&lt;SmartPOSVoidResponse&gt;() { override fun onStart() { startLoadingAnimation() } override fun onSuccess(response: SmartPOSVoidResponse) { handleSucessfullVoid(response) } override fun onFail(exception: Throwable) { handleVoidFailure(exception) } override fun onComplete() { stopLoadingAnimation() } }) .voidTransactionCallback(object: Callback&lt;VoidTransaction&gt;() { override fun onSuccess(response: VoidTransaction) { assembleList(response) } override fun onFail(exception: Throwable) { } }) .messageCallback(object: Callback&lt;MessageCallbackRequestField.MessageData&gt;() { override fun onSuccess(messageData: MessageCallbackRequestField.MessageData) { displayMessage() } override fun onFail(throwable: Throwable) { } }) .menuSelectionCallback(object: Callback&lt;SmartPOSMenuOptions&gt;() { override fun onSuccess(response: SmartPOSMenuOptions) { assembleOptionsList(response.options.iterable) } override fun onFail(error: Throwable) { } }) .build() Zoop.post(voidRequest) Callbacks .callback Responsável pelo fluxo do cancelamento, início, processamento, conclusão (sucesso/falha). onStart -&gt; Esta callback é sinalizada quando o fluxo do cancelamento começa, podendo ser sinalizado pela aplicação o início do processamento. OnSuccess -&gt; Neste momento, a transação foi cancelada, e você recebe o objeto SmartPOSVoidResponsecontendo um *TransactionData, contendo todos os dados da transação. Para utilizar o request de impressão, será necessário passar este objeto para o request de impressão OnFail -&gt; Falha no cancelamento, é recebido um exception, podendo ser do tipo: - ZoopPaymentException -&gt; Falha no fluxo do pagamento, neste caso, passamos a mensagem de erro, podendo ser acessada como exception.message - ZoopTimeoutException -&gt; Tempo excedido na operação - ZoopClosedConnectionException -&gt; Conexão interrompida - ZoopNetworkException -&gt; Falha de conexão OnComplete -&gt; Sinaliza o final do fluxo do cancelamento, tanto em casos de sucesso/falha.</description>
    <generator>Hugo</generator>
    <language>pt</language>
    <atom:link href="//localhost:1313/functions/cancel_payment/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>