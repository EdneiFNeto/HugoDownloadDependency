<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pagamento via Pix - Plugin SmartPOS</title>
    <link>//localhost:1313/functions/pix_payment.html</link>
    <description>Pix Faz-se uso da classe SmartPOSPixPaymentRequestBuilder. Exemplo de Pix val pixRequest = SmartPOSPlugin.createPixPaymentRequestBuilder() .amount(1000) //.referenceId(&#34;&#34;) Identificador próprio (opcional) //.metadata(buildJsonObject {}) Metadados adicionais (opcional) .callback(object: Callback&lt;SmartPOSPixPaymentResponse&gt;(){ override fun onSuccess(response: SmartPOSPixPaymentResponse) { handleSucessfullPayment(response) } override fun onFail(throwable: Throwable) { handlePaymentFailure(exception) } }) .qrCodeCallback(object: Callback&lt;QRCodeCallbackRequestField.QRCodeData&gt;() { override fun onSuccess(qrCodeData: QRCodeCallbackRequestField.QRCodeData) { showQRCode(qrCodeData.getData()); } override fun onFail(throwable: Throwable) { handleQrCodeFailure(throwable) } }) .transactionIdCallback(object: Callback&lt;TransactionIdCallbackRequestField.transactionIdData&gt;() { override fun onSuccess(transactionId: TransactionIdCallbackRequestField.transactionIdData) { storeTransactionId(transactionId.data) } override fun onFail(throwable: Throwable) { handleTransactionIdFailure(throwable) } }) .messageCallback(object: Callback&lt;MessageCallbackRequestField.MessageData&gt;() { override fun onSuccess(messageData: MessageCallbackRequestField.MessageData) { displayMessage() } override fun onFail(throwable: Throwable) { } }) .build() Zoop.post(request) Parâmetros de entrada Chave Tipo Objetivo Exemplo amount Long Valor da transação (em centavos). 2 (R$ 0,02) referenceId String Identificador próprio gerado pelo parceiro (opcional, máx. 50 caracteres) &#34;237ab31-g99c-4e25-9hjs-32u4d3gf7fh2&#34; metadata String (em JSON) ou JsonObject Metadados personalizados fornecidos pelo parceiro (opcional, máx. 512 caracteres). &#34;{\&#34;parcelado\&#34;:false,\&#34;tentativa\&#34;:1,\&#34;vencimento\&#34;:\&#34;2024-02-15\&#34;,\&#34;versao\&#34;:\&#34;1.23.4\&#34;}&#34; Metadados em JsonObject Para criar um objeto de JsonObject, faça como no seguinte exemplo:</description>
    <generator>Hugo</generator>
    <language>pt</language>
    <atom:link href="//localhost:1313/functions/pix_payment/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>